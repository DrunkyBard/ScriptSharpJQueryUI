@{
    Layout = "~/Views/Shared/_SortableLayout.cshtml";
}
<div id="demo-frame">
    <div class="demo">
        <style>
            #sortable31, #sortable32
            {
                list-style-type: none;
                margin: 0;
                padding: 0 0 2.5em;
                float: left;
                margin-right: 10px;
            }
            #sortable31 li, #sortable32 li
            {
                margin: 0 5px 5px 5px;
                padding: 5px;
                font-size: 0.8em;
                width: 120px;
            }
        </style>
        <ul id="sortable31" class="connectedSortable">
            <li class="ui-state-default">Item 1</li>
            <li class="ui-state-default">Item 2</li>
            <li class="ui-state-default">Item 3</li>
            <li class="ui-state-default">Item 4</li>
            <li class="ui-state-default">Item 5</li>
        </ul>
        <ul id="sortable32" class="connectedSortable">
            <li class="ui-state-highlight">Item 1</li>
            <li class="ui-state-highlight">Item 2</li>
            <li class="ui-state-highlight">Item 3</li>
            <li class="ui-state-highlight">Item 4</li>
            <li class="ui-state-highlight">Item 5</li>
        </ul>
    </div>
</div>
<div class="demo-description">
    <p>
        Sort items from one list into another and vice versa, by passing a selector into
        the <code>connectWith</code> option. The simplest way to do this is to group all
        related lists with a CSS class, and then pass that class into the sortable function
        (i.e., <code>connectWith: '.myclass'</code>).
    </p>
</div>
